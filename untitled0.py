# -*- coding: utf-8 -*-
"""Untitled0.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1t8-f9u0ndCE2Bv1qqpuVuXm7JHrvziuk
"""

# Pseudocode: RFID Binary Search Anti-Collision Algorithm

# Example RFID Tags (binary UID format)
tags = [
    "1111001100",  # Tag 1
    "1100011011",  # Tag 2
    "1111001001",  # Tag 3
    "1100101011"   # Tag 4
]

def binary_search(tags, prefix=""):
    matching_tags = [tag for tag in tags if tag.startswith(prefix)]

    if len(matching_tags) == 1:
        print(f"Tag identified: {matching_tags[0]}")
        return [matching_tags[0]]

    if not matching_tags:
        return []

    # Check for collision at next bit position
    next_bit_pos = len(prefix)
    bits_at_pos = set(tag[next_bit_pos] for tag in matching_tags)

    if len(bits_at_pos) > 1:
        # Collision: split search
        return binary_search(matching_tags, prefix + "0") + binary_search(matching_tags, prefix + "1")
    else:
        # No collision, continue with prefix
        return binary_search(matching_tags, prefix + list(bits_at_pos)[0])

# Run the algorithm
identified_tags = binary_search(tags)
print("All identified tags:", identified_tags)